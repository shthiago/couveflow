# Generated by Django 4.1.3 on 2023-03-07 12:24

import django.db.models.deletion
from django.db import migrations, models


def backfill_sensors(apps, _):
    Sensor = apps.get_model('core', 'Sensor')
    Measure = apps.get_model('core', 'Measure')

    measure_fields = {field.name for field in Measure._meta.get_fields()}
    needed_fields = {'device', 'source_label'}

    if not measure_fields.issuperset(needed_fields):
        # Migration not necessary or cannot be done
        return

    for measure in Measure.objects.all():
        sensor, _ = Sensor.objects.get_or_create(
            device=measure.device,
            label=measure.source_label
        )
        measure.sensor = sensor
        measure.save()
        sensor.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_action_params'),
    ]

    operations = [
        migrations.AlterField(
            model_name='action',
            name='device',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='core.device'),
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('label', models.TextField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='sensors', to='core.device')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='measure',
            name='sensor',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='core.sensor'),
        ),
        migrations.RunPython(backfill_sensors),
    ]
